name: .NET Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: your-solution-name                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: your-test-project-path                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      Wap_Project_Directory: your-wap-project-directory-name    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: your-wap-project-path                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restore Nuget
      run: msbuild LegoTrainProject.csproj -t:restore -p:RestorePackagesConfig=true

    - name: Build app 
      run: msbuild LegoTrainProject.csproj -t:rebuild -verbosity:diag -property:Configuration=$env:Configuration

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: files_${{ matrix.configuration }}
        path: 'bin\**'
        
    - name: Zip Files
      if: github.ref == 'refs/heads/master' && matrix.configuration == 'Release'
      uses: vimtor/action-zip@v1.2
      with:
        files: dist/*.*
        recursive: false
        dest: LegoTrainProject.zip

    - name: Create Prerelease
      if: github.ref == 'refs/heads/master' && matrix.configuration == 'Release'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        automatic_release_tag: "ci_win"
        title: "${{ steps.version.outputs.version }}"
        files: |        
          ${{ github.workspace }}/LegoTrainProject.zip
